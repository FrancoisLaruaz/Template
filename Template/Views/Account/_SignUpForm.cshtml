@model Models.ViewModels.SignUpViewModel


@if (HttpContext.Current.User.Identity.IsAuthenticated)
{
    <h1>[[[To create a new account, please log out first.]]]</h1>
}
else
{

    using (Ajax.BeginForm("_SignUpForm", "Account", new { }, new AjaxOptions() { HttpMethod = "POST", OnBegin = "handleSignUpBegin", OnSuccess = "SignUpSuccess", OnFailure = "SignUpFailure" }, new { @id = "SignUpForm" }))
    {
        @Html.AntiForgeryToken()
        <div class="row">

            <div class="col-xs-12 col-md-12">
                <div class="col-xs-12 col-md-12">
                    <div class="websiteFormGroup">
                        <div class="col-sm-12 col-xs-12">
                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @placeholder = "Email" })
                            <i class="fa fa-envelope includeFAIcon" aria-hidden="true"></i>
                            @Html.ValidationMessageFor(m => m.Email)
                        </div>

                    </div>
                </div>
                <div class="col-xs-12 col-md-12">
                    <div class="websiteFormGroup">
                        <div class="col-sm-12 col-xs-12">
                            @Html.PasswordFor(model => model.Password, new { @class = "form-control", @placeholder = "Password" })
                            <i class="fa fa-lock includeFAIcon" aria-hidden="true"></i>
                            @Html.ValidationMessageFor(m => m.Password)
                            <div id="ErrorSignUpForm" class="text-danger"></div>
                        </div>
                    </div>
                </div>

                

                <div class="col-md-8 col-md-offset-2 col-xs-12">
                    <input type="submit" value="[[[Create]]]" class="btn website-btn" id="SubmitButtonSignUp"  />
                </div>


            </div>
        </div>
    }

}

<script src="~/Scripts/Views/Account/SignUp.js?@Commons.StaticFileVersion.StaticFileVersionString"></script>