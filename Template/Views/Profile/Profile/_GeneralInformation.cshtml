@model Models.ViewModels.Profile.GeneralInformationViewModel

@{
    Layout = null;
}


<div class="col-xs-12 col-md-12" id="divBackgroundPicture" style="background-image: url('@Model.BackgroundPictureSrc')">
    <span class="glyphicon glyphicon-upload backgroundUploadOverlay"></span>
    <div class="col-xs-12 col-md-12 portraitPicture" style="background-image: url('@Model.ImageSrc')" id="divProfilePicture">
        <span class="glyphicon glyphicon-upload portraitUploadOverlay portraitPicture"></span>
    </div>
</div>

@if (Model.CanUserEditProfile)
{
    <input type="file" id="backgroundPictureInputFile" style="display:none" name="backgroundPictureInputFile" onchange="loadBackgroundPicture(event)" accept="image/bmp, image/jpeg, image/png, image/gif">
    <input type="file" id="portraitInputFile" style="display:none" name="portraitInputFile" onchange="loadProfilePicture(event)" accept="image/bmp, image/jpeg, image/png, image/gif">
}




<div class="col-xs-12 col-md-12 row" id="divProfileInfoGeneral">
    @if (!String.IsNullOrWhiteSpace(Model.Facebook))
    {
        <div class="col-xs-12 col-md-12" id="divSocialLinks">
            @if (!String.IsNullOrWhiteSpace(Model.Facebook))
                {
                <a href="@Model.Facebook" target="_blank"><span class="fa fa-facebook socialIconLink facebookColor"></span></a>
            }
        </div>
    }
    <div class="col-xs-12 col-md-10">
        <div class="col-xs-12 col-md-12" id="divProfileName">
            <span class="profileName">@Model.FirstName @Model.LastName</span>
        </div>
        @if (!String.IsNullOrWhiteSpace(Model.Location) || !String.IsNullOrWhiteSpace(Model.CreationDateTxt))
        {
            if (!String.IsNullOrWhiteSpace(Model.Location))
            {
                <div class="col-xs-12 col-md-12 divInfoGenerale centerIfMobile">
                    <i class="fa fa-map-marker" aria-hidden="true"></i><span class="ProfileLocation">@Model.Location</span><span class="puce">•</span><span class="CreationDateTxt">@Model.CreationDateTxt</span>
                </div>
            }
            else
            {
                <div class="col-xs-12 col-md-12 divInfoGenerale centerIfMobile">
                    <span class="CreationDateTxt">@Model.CreationDateTxt</span>
                </div>
            }
        }
        @if (!String.IsNullOrWhiteSpace(Model.Description))
        {
            <div class="col-xs-12 col-md-12 divInfoGenerale">
                @Html.Raw(Model.Description.Replace("\r\n", "</br>"))
            </div>
        }

        @if (User.Identity.IsAuthenticated & User.IsInRole(CommonsConst.UserRoles.Admin))
        {
            <div class="col-xs-12 col-md-12 divInfoGenerale">
                <span style="font-style: italic;">Last active : @Model.LastConnectionDate.ToLocalTime().ToString("MMM dd, yyyy hh:mm tt")</span>
            </div>
        }


        @if (Model.CanUserEditProfile)
        {
            <div class="col-xs-12 col-md-12 centerIfMobile" id="divEditProfileMobile">
                <span class="btn btn-success FFgreenButton pull-right EditProfileBtn"
                      style="width:60%;margin-left:20%;margin-right:20%;">
                    [[[Edit Profile]]]
                </span>
            </div>
        }
        @if (User.Identity.IsAuthenticated && !Model.IsLoggedUserProfile)
        {
            if (!Model.FollowedUser)
            {
                <span class="FFgreenButton pull-right FollowUnfollowBtn followSmallScreen FollowUnfollowBtnUser_js" data-userid="@Model.UserId">
                    [[[Follow]]] <i class="fa fa-user-plus followBtnIcon"></i>
                </span>
            }
            else
            {
                <span class="FFgreenButton pull-right FollowUnfollowBtn followSmallScreen FollowUnfollowBtnUser_js" data-userid="@Model.UserId">
                    [[[Following]]] <i class="fa fa-user-plus followBtnIcon"></i>
                </span>
            }
        }
    </div>
    <div class="col-xs-12 col-md-2">
        @if (Model.CanUserEditProfile)
            {
            <div class="col-xs-12 col-md-12">
                <span class="btn btn-success FFgreenButton pull-right EditProfileBtn"
                      id="EditProfileWideScreenBtn">
                    [[[Edit Profile]]]
                </span>
            </div>
        }
        @if (User.Identity.IsAuthenticated && !Model.IsLoggedUserProfile)
            {
            <div class="col-xs-12 col-md-12" style="padding-top:8px;margin-left:15px;">


                @if (!Model.FollowedUser)
                {
                    <span class="FForangeButton pull-right FollowUnfollowBtn followBigScreen FollowUnfollowBtnUser_js" data-userid="@Model.UserId">
                        [[[Follow]]] <i class="fa fa-user-plus followBtnIcon"></i>
                    </span>
                }
                else
                {
                    <span class="FFgreenButton pull-right FollowUnfollowBtn followBigScreen FollowUnfollowBtnUser_js" data-userid="@Model.UserId">
                        [[[Following]]] <i class="fa fa-user-plus followBtnIcon"></i>
                    </span>
                }
            </div>
        }
    </div>
</div>


<div class="modal fade" id="EditProfileModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document" id="modal-dialog-editprofile">
        <div class="modal-content">
            <div id="EditProfileContent" class="modal-body">
                <div style="position: relative; height: 1px;">
                    <button id="closeEditProfileModal" type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div id="EditProfileDiv" class="row">
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    $(document).ready(function () {
        SetGeneralInformation();
    });
</script>


